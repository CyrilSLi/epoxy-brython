if(void 0===_epoxyPolyfillClient){console.log("loading epoxy-tls from JS polyfill");var _epoxyPolyfillClient=null,_epoxyPolyfillQueue=[];import("https://cdn.jsdelivr.net/npm/@mercuryworkshop/epoxy-tls/full/epoxy-bundled.min.js").then(e=>e.default().then(()=>{const t=new e.EpoxyClientOptions({user_agent:navigator.userAgent,wisp_v2:!0,udp_extension_required:!0});for(_epoxyPolyfillClient=new e.EpoxyClient("wss://wisp.mercurywork.shop",t);_epoxyPolyfillQueue.length>0;)_epoxyPolyfillQueue.shift()();console.log("epoxy-tls loaded successfully")},e=>console.error("Error initializing epoxy-tls:",e)),e=>console.error("Error loading epoxy-tls:",e))}function fetch(e,t){return null!=_epoxyPolyfillClient?_epoxyPolyfillClient.fetch(e,t):new Promise(s=>{_epoxyPolyfillQueue.push(()=>s(_epoxyPolyfillClient.fetch(e,t)))})}class XMLHttpRequest extends EventTarget{UNSENT=0;OPENED=1;HEADERS_RECEIVED=2;LOADING=3;DONE=4;#e;#t;#s;#r;#n;#i;#o;#l;constructor(){super(),this.#a(),this.#r=null,this.timeout=0,this.responseType="",this.withCredentials=!1,this.#h(["abort","error","load","loadend","loadstart","progress","readystatechange","timeout"],this),this.#h(["abort","error","load","loadend","loadstart","progress","timeout"],this.upload)}#h(e,t){for(let s of e)t["on"+s]=null}#a(){this.#e=0,this.#t=null,this.#s=null,this.#i=null,this.#o={},this.#l=!1,this.#n=new EventTarget}#p(e,t){if(!t)return this.#p(e,this),void this.#p(e,this.#n);t.dispatchEvent(e);try{"function"==typeof t["on"+e.type]&&t["on"+e.type](e)}catch(e){console.error(e)}}abort(){this.#l=!0,this.readyState=this.UNSENT,this.#t=null,this.#p(new Event("abort")),this.#p(new Event("abort"),this.#n)}getAllResponseHeaders(){if(!this.#t)return"";let e="";for(let[t,s]of this.#t.headers)e+=`${t}: ${s}\r\n`;return e}getResponseHeader(e){return this.#t?this.#t.headers.get(e):""}open(e,t,s,r,n){if(!1===s)throw new DOMException("InvalidAccessError");this.#a(),this.readyState=this.OPENED,this.#i=new URL(t,location.href),this.#i.username=r||"",this.#i.password=n||"",this.#o.headers={},this.#o.method=e.toUpperCase()}overrideMimeType(e){this.#r=e}send(e){"GET"===this.#o.method&&(e=void 0),this.timeout&&setTimeout(()=>{this.readyState!==this.DONE&&this.abort()},this.timeout),this.#o.body=e||void 0,(async()=>{try{if(this.#t=await fetch(this.#i,this.#o),this.readyState=this.HEADERS_RECEIVED,this.readyState=this.LOADING,this.#l)return;this.#p(new ProgressEvent("loadstart")),this.#s=await this.#t.arrayBuffer(),this.#p(new ProgressEvent("progress")),this.readyState=this.DONE,this.#p(new ProgressEvent("load"))}catch(e){this.#p(new ProgressEvent("error"))}this.#p(new ProgressEvent("loadend"))})()}setRequestHeader(e,t){this.#o.headers||(this.#o.headers={}),this.#o.headers[e]=t}set readyState(e){e!==this.#e&&(this.#e=e,this.#p(new Event("readystatechange")))}get readyState(){return this.#e}get response(){if(null!==this.#s)if("arraybuffer"===this.responseType)try{let e=new ArrayBuffer(this.#s.byteLength);return new Uint8Array(e).set(new Uint8Array(this.#s)),e}catch(e){return null}else if("blob"===this.responseType)try{return new Blob([this.#s])}catch(e){return null}else{if("document"===this.responseType)return this.responseXML;if("json"!==this.responseType)return this.responseText;if(null===this.#s)return null;try{return JSON.parse(this.responseText)}catch(e){return null}}}get responseText(){return this.#s?(new TextDecoder).decode(this.#s):""}get responseURL(){return this.#t?this.#t.url:""}get responseXML(){if("document"!==this.responseType&&""!==this.responseType)throw new DOMException("InvalidStateError");return null===this.#t||null===this.#s?null:(new DOMParser).parseFromString(this.responseText,this.#r||"text/html")}get status(){return this.#t?this.#t.status:0}get statusText(){return this.#t?this.#t.statusText:""}get upload(){return this.#n}}